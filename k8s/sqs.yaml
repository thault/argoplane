apiVersion: sqs.aws.upbound.io/v1beta1
kind: Queue
metadata:
  labels:
    #testing.upbound.io/example-name: example
    application.queue: example-app
  name: tha-example-1
spec:
  forProvider:
    name: tha-example-sqs-1
    receiveWaitTimeSeconds: 10
    region: us-east-1
    redrivePolicy: >-
      ${jsonencode({
          deadLetterTargetArn = "arn:aws:sqs:us-east-1:625827655152:tha-example-sqs-1-dlq"
          maxReceiveCount     = 4
        })}
    tags:
      Environment: production
---

apiVersion: sqs.aws.upbound.io/v1beta1
kind: Queue
metadata:
  labels:
    #testing.upbound.io/example-name: example
  name: tha-example-1-dlq
spec:
  forProvider:
    name: tha-example-sqs-1-dlq
    receiveWaitTimeSeconds: 10
    redriveAllowPolicy: >-
      ${jsonencode({
          redrivePermission = "byQueue",
          sourceQueueArns   = ["arn:aws:sqs:us-east-1:625827655152:tha-example-sqs-1"]
        })}
    region: us-east-1
    tags:
      Environment: production
---

apiVersion: sns.aws.upbound.io/v1beta1
kind: Topic
metadata:
  annotations:
    application.sns: example-app
    #meta.upbound.io/example-id: sns/v1beta1/topicsubscription
  labels:
    testing.upbound.io/example-name: sns
    application.sns: example-app
  name: tha-example-sns-1
spec:
  forProvider:
    region: us-east-1
---

apiVersion: sns.aws.upbound.io/v1beta1
kind: TopicSubscription
metadata:
  annotations:
    meta.upbound.io/example-id: sns/v1beta1/topicsubscription
  labels:
    testing.upbound.io/example-name: sns
  name: example
spec:
  forProvider:
    endpointSelector:
      matchLabels:
        application.queue: example-app
    protocol: sqs
    region: us-east-1
    topicArnSelector:
      matchLabels:
        application.sns: example-app